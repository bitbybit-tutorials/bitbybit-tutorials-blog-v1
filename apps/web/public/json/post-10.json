{
  "data": {
    "category": [
      "JavaScript",
      "React",
      "React Native"
    ],
    "created": "01-12-2021",
    "id": 10,
    "lastUpdated": "02-12-2021",
    "title": "Post 10",
    "type": "post"
  },
  "slug": "post-10",
  "compiledSource": {
    "compiledSource": "var d=Object.defineProperty,h=Object.defineProperties;var l=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var i=(e,t,n)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,o=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&i(e,n,t[n]);if(a)for(var n of a(t))p.call(t,n)&&i(e,n,t[n]);return e},m=(e,t)=>h(e,l(t));var g=(e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&a)for(var r of a(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n};const makeShortcode=e=>function(n){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",o({},n))},TestComponent=makeShortcode(\"TestComponent\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:e}=r,t=g(r,[\"components\"]);return mdx(MDXLayout,m(o(o({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Next.js has two forms of pre-rendering: \",mdx(\"strong\",{parentName:\"p\"},\"Static Generation\"),\" and \",mdx(\"strong\",{parentName:\"p\"},\"Server-side Rendering\"),\". The difference is in \",mdx(\"strong\",{parentName:\"p\"},\"when\"),\" it generates the HTML for a page.\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Static Generation\"),\" is the pre-rendering method that generates the HTML at \",mdx(\"strong\",{parentName:\"li\"},\"build time\"),\". The pre-rendered HTML is then \",mdx(\"em\",{parentName:\"li\"},\"reused\"),\" on each request.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Server-side Rendering\"),\" is the pre-rendering method that generates the HTML on \",mdx(\"strong\",{parentName:\"li\"},\"each request\"),\".\")),mdx(\"p\",null,\"Importantly, Next.js lets you \",mdx(\"strong\",{parentName:\"p\"},\"choose\"),' which pre-rendering form to use for each page. You can create a \"hybrid\" Next.js app by using Static Generation for most pages and using Server-side Rendering for others.'),mdx(TestComponent,{name:\"next-mdx-remote\",mdxType:\"TestComponent\"}),mdx(\"p\",null,\"This is an example post. There's another one \",mdx(\"a\",o({parentName:\"p\"},{href:\"/posts/example-post\"}),\"here\"),\".\"))}MDXContent.isMDXComponent=!0;\n",
    "scope": {
      "category": [
        "JavaScript",
        "React",
        "React Native"
      ],
      "created": "01-12-2021",
      "id": 10,
      "lastUpdated": "02-12-2021",
      "title": "Post 10",
      "type": "post"
    }
  },
  "rawSource": "\nNext.js has two forms of pre-rendering: **Static Generation** and **Server-side Rendering**. The difference is in **when** it generates the HTML for a page.\n\n- **Static Generation** is the pre-rendering method that generates the HTML at **build time**. The pre-rendered HTML is then _reused_ on each request.\n- **Server-side Rendering** is the pre-rendering method that generates the HTML on **each request**.\n\nImportantly, Next.js lets you **choose** which pre-rendering form to use for each page. You can create a \"hybrid\" Next.js app by using Static Generation for most pages and using Server-side Rendering for others.\n\n<TestComponent name=\"next-mdx-remote\" />\n\nThis is an example post. There's another one [here](/posts/example-post).\n"
}